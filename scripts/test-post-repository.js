#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã PostRepository
 * –ó–∞–ø—É—Å–∫: node scripts/test-post-repository.js
 */

const { PostRepository } = require('../lib/repositories/post-repository.ts')
const { PostService } = require('../lib/services/post-service.ts')

async function testPostRepository() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PostRepository...\n')

  try {
    const postRepo = new PostRepository()
    const postService = new PostService()
    
    // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    const testUserId = 'test-user-id'
    const testChannelId = 'test-channel-id'

    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞...')
    
    const createData = {
      channel_id: testChannelId,
      title: '–¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ',
      creative_text: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è. –ü–æ–∫—É–ø–∞–π—Ç–µ –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç!',
      advertiser_inn: '1234567890',
      advertiser_name: '–û–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è"',
      product_description: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏',
      target_url: 'https://example.com',
      placement_cost: 5000,
      placement_currency: 'RUB'
    }

    try {
      // –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –≤—ã–¥–∞—Ç—å –æ—à–∏–±–∫—É, —Ç–∞–∫ –∫–∞–∫ –∫–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      const post = await postService.createPost(testUserId, createData)
      console.log('‚úÖ –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω:', post.post.id)
    } catch (error) {
      console.log('‚ùå –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞:', error.message)
    }

    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é...')
    
    const invalidData = {
      channel_id: '',
      title: '',
      creative_text: '',
      advertiser_inn: 'invalid',
      advertiser_name: '',
      product_description: ''
    }

    try {
      await postRepo.create(testUserId, invalidData)
      console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞!')
    } catch (error) {
      console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç:', error.message)
    }

    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤...')
    
    try {
      const posts = await postRepo.findMany(testUserId, { limit: 5 })
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤:', posts.total)
      console.log('   –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤:', posts.posts.length)
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤:', error.message)
    }

    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é...')
    
    try {
      const draftPosts = await postRepo.findMany(testUserId, { 
        status: 'draft',
        limit: 10 
      })
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤:', draftPosts.total)
      
      const scheduledPosts = await postRepo.findScheduled(testUserId)
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö:', scheduledPosts.length)
      
      const ordPendingPosts = await postRepo.findByOrdStatus(testUserId, 'pending')
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–∂–∏–¥–∞—é—â–∏—Ö –û–†–î:', ordPendingPosts.length)
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:', error.message)
    }

    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...')
    
    try {
      const stats = await postService.getPostsStats(testUserId)
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å—Ç–æ–≤:')
      console.log('   –í—Å–µ–≥–æ:', stats.total)
      console.log('   –ß–µ—Ä–Ω–æ–≤–∏–∫–∏:', stats.draft)
      console.log('   –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ:', stats.scheduled)
      console.log('   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:', stats.published)
      console.log('   –û–†–î –æ–∂–∏–¥–∞–µ—Ç:', stats.ord_pending)
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error.message)
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
if (require.main === module) {
  testPostRepository()
    .then(() => {
      console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!')
      process.exit(0)
    })
    .catch((error) => {
      console.error('\nüí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
      process.exit(1)
    })
}

module.exports = { testPostRepository } 