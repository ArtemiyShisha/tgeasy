/**
 * @fileoverview TypeScript types and interfaces for MCP-generated components.
 * This file ensures type safety and consistency across all auto-generated UI components.
 */

import { LucideIcon } from 'lucide-react';

/**
 * Base props for any component generated by MCP.
 * Ensures that common attributes like `className` and test IDs are always available.
 */
export interface BaseComponentProps {
  className?: string;
  'data-testid'?: string;
}

/**
 * Defines a standard for navigation items used in menus, sidebars, etc.
 */
export interface NavItem extends BaseComponentProps {
  label: string;
  href: string;
  icon?: LucideIcon;
  isActive?: boolean;
  isExternal?: boolean;
  children?: NavItem[];
}

/**
 * Represents a user profile, often used in avatars, headers, and user menus.
 */
export interface UserProfile {
  name: string;
  avatarUrl?: string;
  email?: string;
  initials?: string;
}

/**
 * Defines the variant prop for components that have different visual styles.
 */
export type ComponentVariant = 'primary' | 'secondary' | 'ghost' | 'destructive' | 'link';

/**
 * Defines the size prop for components.
 */
export type ComponentSize = 'sm' | 'md' | 'lg' | 'icon';

/**
 * Props for a generic button that can be generated by MCP.
 */
export interface ButtonProps extends BaseComponentProps, React.ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: ComponentVariant;
  size?: ComponentSize;
  isLoading?: boolean;
  icon?: LucideIcon;
}

/**
 * Props for a generic card component.
 */
export interface CardProps extends BaseComponentProps {
  title: string;
  description?: string;
  children: React.ReactNode;
  footer?: React.ReactNode;
}

/**
 * This file should be expanded with more shared types as the project grows.
 * Examples:
 * - Table column definitions
 * - Form field types
 * - API response shapes for UI display
 */ 